# rootsomake.mk
#
# DO NOT EDIT THIS FILE.  IT HAS BEEN AUTOGENERATED BY CONFIGURE.
# If you have changed your settings, rerun configure.
#
# Created for MaGe by Jason Detwiler, June 2005
# Modified by MGMarino Feb 2007
#
# This is a makefile to include when a package has classes that need to be
# "rootified" an compiled in to a shared-object library loadable by root.
# In the calling makefile, defined the variable ROOTSOCLASSES to contain
# the names of all classes to be compiled into the library. Each should
# have an associated [package]/[name].hh and src/[name].cc file. 
# rootsomake.mk should be included at the BOTTOM of the user's makefile, 
# after G4's binmake.gmk has been included. See mjio/GNUmakefile for an 
# example.
# If your classes use, for example, MGLogger, you will need to tell
# rootsomake that libio needs to be compiled in. For each such MaGe
# library to be compiled in, add the appropriate package name to the
# variable MGROOTSODEPS
# FixME Support for shared object libraries (i.e. linking to G4, etc.) needs to be included.
# Right now we are linking against PIC static libraries, which is fine, but this should
# be updated.

ROOTSODEPCCS = $(addprefix src/,$(addsuffix .cc,$(ROOTSOCLASSES)))
ROOTDICTDEPHHS = $(addprefix $(name)/,$(addsuffix .hh,$(ROOTSOCLASSES)))
ROOTSOFILEBASE = $(name)ROOT
ROOTSODEPSOBJFILTER := $(foreach package, $(filter-out $(name), $(MGROOTSODEPS)), $(MGTMPDIR)/$(package)/obj.last)
ROOTLIBNAME = libROOT_$(ROOTSOFILEBASE)
ROOTSONAME = $(ROOTLIBNAME).$(ROOTSOSUFFIX)
ROOTSOFILE = ../analysis/$(ROOTSONAME)
ROOTMAPFILE = ../analysis/$(ROOTLIBNAME).rootmap
ROOTPCMNAME = $(ROOTLIBNAME)_rdict.pcm
ROOTPCMFILE = ../analysis/$(ROOTPCMNAME)
DICTNAME = DICT_$(ROOTSOFILEBASE)
ROOTDICTCC = src/$(DICTNAME).cc
ROOTDICTHH = $(name)/$(DICTNAME).h
MGROOTSODEPLIBS = $(foreach package, $(MGROOTSODEPS), @G4WORKDIR@/tmp/@G4SYSTEM@/$(package)/lib$(package).$(MGLIBEXT))
#MGROOTSODEPLIBS = $(foreach package, $(MGROOTSODEPS), @G4WORKDIR@/tmp/@G4SYSTEM@/$(package)/lib$(package).$(SHEXT))
ROOTCFLAGS = @ROOTAUXCFLAGS@ @ROOTCFLAGS@
ROOTLIBS = -L@ROOTLIBDIR@ @ROOTLIBS@ @ROOTAUXLIBS@
ROOTCINT = @ROOTCINT@
ROOTCLING = @ROOTCLING@

.PHONY: rootso cleanrootdict FORCE

rootso: $(ROOTSOFILE)

FORCE: 

$(ROOTSOFILE): $(ROOTDICTCC) $(ROOTSODEPSOBJFILTER)
ifdef CPPVERBOSE
	$(CXX) $(CXXFLAGS) -I$(name) $(CPPFLAGS) $(ROOTCFLAGS) -o $(ROOTSOFILE) $(ROOTSOFLAGS) $(ROOTDICTCC) $(ROOTSODEPCCS) $(ROOTLIBS) $(MGROOTSODEPLIBS) $(LDFLAGS) $(LOADLIBS)
else
	@$(CXX) $(CXXFLAGS) -I$(name) $(CPPFLAGS) $(ROOTCFLAGS) -o $(ROOTSOFILE) $(ROOTSOFLAGS) $(ROOTDICTCC) $(ROOTSODEPCCS) $(ROOTLIBS) $(MGROOTSODEPLIBS) $(LDFLAGS) $(LOADLIBS)
endif
	@$(MAKE) # make again because dependency step doesn't necessarily pickup new version of $(ROOTDICTCC)

$(ROOTSODEPSOBJFILTER): FORCE 
	@$(MAKE) -C $(MAGEDIR) $(notdir $(@D)).lib


ifneq ($(ROOTCLING),false)
### ROOT-6: ###

$(ROOTDICTCC): $(ROOTDICTDEPHHS)
	@echo "Building ROOT dictionary $@..."
	@$(ROOTCLING) -f $@.tmp -s $(ROOTSONAME) -rml $(ROOTSONAME) -rmf $(ROOTMAPFILE).tmp -c $(CPPFLAGS) $(CXXFLAGS) -I$(pkgincludedir) $+
	@# Some magic to prefix header names with "$(PACKAGE)/", and only that, in dictionary and rootmap:
	@$(GREP) -F -v '"'"$$(dirname `pwd`)"'/' $@.tmp | $(GREP) -v '^"[.][.].*",$$' | $(SED) 's|"\([^"]*/\)\?\([^/"]*[.]hh\)",|"\2",| ; s|\\"\([^"]*/\)\?\([^/"]*[.]hh\)\\"\\n"|\\"\2\\"\\n"|' > $@.tmp2
	@$(SED) 's|\$$clingAutoload\$$\([^/""]\+/\)*|$$clingAutoload$$|; /.*DICTPAYLOAD(.*/,/.*)DICTPAYLOAD.*/ s|#include "\([^/"]\+/\)*\(.*\)"|#include "\2"|' $@.tmp2 > $@ && $(RM) $@.tmp $@.tmp2
	@$(SED) 's|\(header \+\)\([^ ].*/\)\?\([^ ].*[.]h\)|\1\3|' $(ROOTMAPFILE).tmp > $(ROOTMAPFILE) && $(RM) $(ROOTMAPFILE).tmp
	@mv $(ROOTPCMNAME) $(ROOTPCMFILE)

else
### ROOT-5: ###

$(ROOTDICTCC):  $(ROOTDICTDEPHHS)
	@echo "Building ROOT dictionary $@..."
	@rm -f $(ROOTDICTCC) $(ROOTDICTHH)
ifdef CPPVERBOSE
	$(ROOTCINT) $(ROOTDICTCC) -c $(ROOTDICTDEPHHS);
else
	@$(ROOTCINT) $(ROOTDICTCC) -c $(ROOTDICTDEPHHS);
endif
	@mv $(ROOTDICTCC) TMPDICT.cc
	@mv src/$(DICTNAME).h $(ROOTDICTHH)
	@sed -e 's/#include "$(DICTNAME).h"/#include "$(subst /,\/,$(ROOTDICTHH))"/' TMPDICT.cc > $(ROOTDICTCC)
	@rm TMPDICT.cc


endif


clean:: cleanrootdict

cleanrootdict:
	@rm -f $(ROOTDICTCC) $(ROOTDICTHH) $(ROOTSOFILE) $(ROOTMAPFILE) $(ROOTPCMFILE)
